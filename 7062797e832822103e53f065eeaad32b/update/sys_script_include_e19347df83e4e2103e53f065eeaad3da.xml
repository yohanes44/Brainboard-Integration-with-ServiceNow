<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_854636_b_board.BrainboardUtility</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description/>
        <mobile_callable>false</mobile_callable>
        <name>BrainboardUtility</name>
        <sandbox_callable>true</sandbox_callable>
        <script><![CDATA[var BrainboardUtility = Class.create();

BrainboardUtility.variableSets = [
	{
		sys_id: "18e4df62837462103e53f065eeaad357",
		order: 100,
		description: "Widget Item"
	},
	{
		sys_id: "6f7ba36283f462103e53f065eeaad3d7",
		order: 200,
		description: "Customizable Fields"
	},
	{
		sys_id: "8c7326e2837062103e53f065eeaad399",
		order: 300,
		description: "Project & Environment"
	}
];

BrainboardUtility.catItemCategory = "aab5abdb53b46210e80451a0a0490e09";
BrainboardUtility.catItemCatalog = "cdb42f1b53b46210e80451a0a0490e0e";
BrainboardUtility.token = gs.getProperty("x_854636_b_board.api.token");
BrainboardUtility.portalTopic = "3833c87f473062506161e99b116d43d4";
BrainboardUtility.clone_architecture_tpl_flow = "3bbb5fea837462103e53f065eeaad3bc";


BrainboardUtility.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {

	getAllProjects: function () {
		var projectGr = new GlideRecord("x_854636_b_board_project");
		projectGr.query();
		var projects = [];
		while (projectGr.next()) {
			projects.push({
				uuid: projectGr.getValue("uuid"),
				sys_id: projectGr.getValue("sys_id"),
			});
		}
		return projects;
	},

	getAllArchitectureTemplates: function () {
		var architectureTplGr = new GlideRecord("x_854636_b_board_architecture_template");
		architectureTplGr.query();
		var architectureTemplates = [];
		while (architectureTplGr.next()) {
			architectureTemplates.push({
				uuid: architectureTplGr.getValue("uuid"),
				sys_id: architectureTplGr.getValue("sys_id"),
			});
		}
		return architectureTemplates;
	},

	getArchitectureTemplateGR: function (archTplSysId) {
		var gr = new GlideRecord("x_854636_b_board_architecture_template");
		if (gr.get(archTplSysId)) {
			return gr;
		}
	},

	getArchitectureTemplate: function () {
		var catItemSysId = this.getParameter("sysparm_catItemSysId");
		var gr = new GlideRecord("x_854636_b_board_architecture_template");
		gr.addQuery("catalog_item", catItemSysId);
		gr.query();
		gr.setLimit(1);
		while(gr.next()){
			return JSON.stringify({
				name: gr.getValue("name"),
				uuid: gr.getValue("uuid"),
				clone_count: gr.getValue("clone_count"),
				visibility: gr.getValue("visibility"),
				status: gr.getValue("status"),
				description: gr.getValue("description"),
				readme: gr.getValue("readme"),
				snapshot_url: gr.getValue("snapshot_url"),
				thumbnail_url: gr.getValue("thumbnail_url"),
			});
		}
	},

	createVariable: function (data, archTplSysId) {
		var brainboardVariableGr = new GlideRecord("x_854636_b_board_variable");
		brainboardVariableGr.initialize();
		brainboardVariableGr.setValue("mandatry", data.mandatry);
		brainboardVariableGr.setValue("architecture_template", archTplSysId);
		brainboardVariableGr.setValue("value", data.value);
		brainboardVariableGr.setValue("type", data.type);
		brainboardVariableGr.setValue("description", data.description);
		brainboardVariableGr.setValue("default", data.default);
		brainboardVariableGr.setValue("name", data.name);
		brainboardVariableGr.setValue("id", data.uuid);
		var createdbrainboardVariableSysId = brainboardVariableGr.insert();

		var catVariableGr = new GlideRecord("item_option_new");
		catVariableGr.type = "6";
		catVariableGr.mandatory = brainboardVariableGr.getValue("mandatry");
		catVariableGr.question_text = brainboardVariableGr.getValue("name");
		catVariableGr.name = brainboardVariableGr.getValue("name");
		catVariableGr.order = 400;
		catVariableGr.cat_item = brainboardVariableGr.architecture_template.catalog_item;
		var createdCatVariableSysId = catVariableGr.insert();

		var brainboardvarGr = new GlideRecord("x_854636_b_board_variable");
		if (brainboardvarGr.get(createdbrainboardVariableSysId)) {
			brainboardvarGr.catalog_variable = createdCatVariableSysId;
			brainboardvarGr.update();
		}
	},

	updateVariable: function (data, archTplSysId) {
		var variableGr = new GlideRecord("x_854636_b_board_variable");
		if (variableGr.get("id", data.uuid)) {
			variableGr.setValue("mandatry", data.mandatry);
			variableGr.setValue("architecture_template", archTplSysId);
			variableGr.setValue("value", data.value);
			variableGr.setValue("type", data.type);
			variableGr.setValue("description", data.description);
			variableGr.setValue("default", data.default);
			variableGr.setValue("name", data.name);
			variableGr.setValue("id", data.uuid);
			variableGr.update();
		}
	},

	filterEnvironments: function (projectSysId) {
		var environmentGr = new GlideRecord("x_854636_b_board_environment");
		environmentGr.addQuery("project", projectSysId);
		environmentGr.query();
		var envIDs = [];
		while (environmentGr.next()) {
			envIDs.push(environmentGr.sys_id.toString());
		}
		return 'sys_idIN' + envIDs.join(',');
	},

	getCloneRequestPayload: function (ritmSysId) {
		var ritmGR = new GlideRecord("sc_req_item");
		if (ritmGR.get(ritmSysId)) {

			var projectUUID = null;
			var projectGR = new GlideRecord("x_854636_b_board_project");
			if(projectGR.get(ritmGR.variables.project.toString())){
				projectUUID = projectGR.getValue("uuid");
			}

			var payload = {
				"description": ritmGR.variables.description.toString(),
				"environment": ritmGR.variables.u_environment.toString(),
				"name": ritmGR.variables.name.toString(),
				"project": projectUUID,
				"variable_values": {
				}
			};
			var variableGr = new GlideRecord("x_854636_b_board_variable");
			variableGr.addQuery("architecture_template.catalog_item", ritmGR.cat_item);
			variableGr.query();
			while (variableGr.next()) {
				var varLabel = variableGr.catalog_variable.name;
				payload.variable_values[variableGr.name] = ritmGR.variables[varLabel].toString();
			}
			return JSON.stringify(payload);
		}
	},

	getArchTplFieldValue: function (archTplUUID, fieldName) {
		var archTplGr = new GlideRecord("x_854636_b_board_architecture_template");
		if (archTplGr.get("uuid", archTplUUID)) {
			return archTplGr.getValue(fieldName);
		}
	},

	cloneArchitectureTemplate: function (payload, archTemplateUuid) {
		var r = new sn_ws.RESTMessageV2('x_854636_b_board.Brainboard - apac1', 'Clone Architecture Template');
		r.setStringParameterNoEscape('template', archTemplateUuid);
		r.setStringParameterNoEscape('payload', payload);
		r.setStringParameterNoEscape('token', BrainboardUtility.token);
		var response = r.execute();
		var responseBody = response.getBody();
		var httpStatus = response.getStatusCode();
		return responseBody;
	},

	createCatalogItem: function (archTplSysId, iconImageAttachment, pictureImageAttachment) {
		var archTplGr = this.getArchitectureTemplateGR(archTplSysId);
		var catItemGr = new GlideRecord("sc_cat_item");
		catItemGr.initialize();
		catItemGr.name = archTplGr.getValue("name");
		catItemGr.description = archTplGr.getValue("description");
		catItemGr.request_method = "submit";
		catItemGr.no_cart_v2 = true;
		catItemGr.no_quantity_v2 = true;
		catItemGr.no_delivery_time_v2 = true;
		catItemGr.no_save_as_draft = true;
		catItemGr.no_attachment_v2 = true;
		catItemGr.icon = iconImageAttachment;
		catItemGr.picture = pictureImageAttachment;
		catItemGr.active = true;
		catItemGr.category = BrainboardUtility.catItemCategory;
		catItemGr.sc_catalogs = BrainboardUtility.catItemCatalog;
		catItemGr.flow_designer_flow = BrainboardUtility.clone_architecture_tpl_flow;
		var catItemSysId = catItemGr.insert();

		var mtmCon = new GlideRecord("m2m_connected_content"); 
		mtmCon.initialize(); 
		mtmCon.setValue("topic", BrainboardUtility.portalTopic); 
		mtmCon.setValue("content_type", "98f9a16553622010069addeeff7b1248"); 
		mtmCon.setValue("catalog_item", catItemSysId); 
		mtmCon.insert(); 

		archTplGr.setValue("catalog_item", catItemSysId);
		archTplGr.update();

		BrainboardUtility.variableSets.forEach(function(variableSet){
			var variableSetGr = new GlideRecord("io_set_item");
			variableSetGr.initialize();
			variableSetGr.variable_set = variableSet.sys_id;
			variableSetGr.sc_cat_item = catItemSysId;
			variableSetGr.order = variableSet.order;
			variableSetGr.insert();
		});

	    var containerStartGr = new GlideRecord("item_option_new");
		containerStartGr.initialize();
		containerStartGr.type = "19";
		containerStartGr.question_text = "Variables";
		containerStartGr.name = "variables";
		containerStartGr.order = "390";
		containerStartGr.display_title = true;
		containerStartGr.cat_item = catItemSysId;
		containerStartGr.insert();

		var formatterBreakGr = new GlideRecord("item_option_new");
		formatterBreakGr.initialize();
		formatterBreakGr.type = "12";
		formatterBreakGr.order = "380";
		formatterBreakGr.cat_item = catItemSysId;
		formatterBreakGr.insert();
		
	},

	attachImage: function (tableName, recordSysId, fileName, imageURL) {
		var request = new sn_ws.RESTMessageV2();
		request.setHttpMethod("get");
		request.setEndpoint(imageURL);
		request.saveResponseBodyAsAttachment(tableName, recordSysId, fileName);
		var response = request.execute();
		var httpStatus = response.getStatusCode();
		return response.getResponseAttachmentSysid();
	},


	variableExist: function (data, architectureTplSysId) {
		var variableGr = new GlideRecord("x_854636_b_board_variable");
		variableGr.addQuery("name", data.name);
		variableGr.addQuery("architecture_template", architectureTplSysId);
		variableGr.setLimit(1);
		variableGr.query();
		var answer = false;
		while (variableGr.next()) {
			answer = true;
		}
		return answer;
	},

	type: 'BrainboardUtility'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>yohanes.yilma</sys_created_by>
        <sys_created_on>2025-04-02 09:57:22</sys_created_on>
        <sys_id>e19347df83e4e2103e53f065eeaad3da</sys_id>
        <sys_mod_count>103</sys_mod_count>
        <sys_name>BrainboardUtility</sys_name>
        <sys_package display_value="Brainboard" source="x_854636_b_board">7062797e832822103e53f065eeaad32b</sys_package>
        <sys_policy/>
        <sys_scope display_value="Brainboard">7062797e832822103e53f065eeaad32b</sys_scope>
        <sys_update_name>sys_script_include_e19347df83e4e2103e53f065eeaad3da</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-04-25 12:13:14</sys_updated_on>
    </sys_script_include>
</record_update>
